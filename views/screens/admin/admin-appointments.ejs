<style>
    .appointments-container {
        max-width: 800px;
        margin: 0 auto;
    }
    .appointment-card {
        background: var(--card-light);
        border-radius: 16px;
        padding: 20px;
        margin-bottom: 20px;
        border-left: 5px solid var(--primary-color);
        transition: all 0.3s ease;
    }
    .appointment-card:hover { transform: translateY(-5px); box-shadow: 0 8px 25px var(--shadow-color); }
    .card-header {
        display: flex;
        justify-content: space-between;
        align-items: center;
        margin-bottom: 15px;
    }
    .card-header h3 { font-size: 1.2rem; font-weight: 600; color: var(--text-primary); }
    .status-badge {
        padding: 6px 12px;
        border-radius: 20px;
        font-size: 0.8rem;
        font-weight: 500;
        color: #fff;
    }
    .status-Pendente { background: linear-gradient(135deg, var(--warning-color), #FFC107); }
    .status-Confirmado { background: linear-gradient(135deg, var(--success-color), #4CAF50); }
    .status-Cancelado { background: linear-gradient(135deg, var(--danger-color), #F44336); }
    .card-body { display: grid; grid-template-columns: repeat(auto-fit, minmax(200px, 1fr)); gap: 15px; color: var(--text-secondary); }
    .info-item { display: flex; align-items: center; gap: 10px; }
    .info-item i { color: var(--primary-color); width: 20px; text-align: center; }
    .card-actions { display: flex; gap: 10px; margin-top: 20px; }
    .card-actions button { flex: 1; padding: 10px; border-radius: 8px; cursor: pointer; transition: all 0.3s ease; }
    .btn-confirm { background: var(--success-color); color: white; border: none; }
    .btn-confirm:hover { background: #218c54; }
    .btn-cancel { background: var(--danger-color); color: white; border: none; }
    .btn-cancel:hover { background: #b02a2a; }
    .btn-disabled { opacity: 0.6; cursor: not-allowed; }
</style>

<div class="appointments-container">
    <h2 style="text-align: center; margin-bottom: 30px; color: var(--primary-color);" id="adminAppointmentsTitle">Todos Agendamentos</h2>
    <div id="appointmentsList"></div>
    <div class="no-appointments form-section" style="text-align: center; display: none;">
        <h3 id="noAppointmentsFoundAdminTitle">Não há agendamentos para exibir no momento.</h3>
        <p style="color: var(--text-secondary); margin-top: 10px; margin-bottom: 20px;" id="noAppointmentsFoundAdminDesc">Não há agendamentos para exibir no momento.</p>
    </div>
</div>

<script>
    async function loadAppointments() {
        try {
            const response = await fetch('/api/appointments');
            if (!response.ok) throw new Error('Erro ao carregar agendamentos.');
            const appointments = await response.json();
            const container = document.getElementById('appointmentsList');
            container.innerHTML = '';

            if (appointments.length === 0) {
                document.querySelector('.no-appointments').style.display = 'block';
                return;
            }

            appointments.forEach(app => {
                const card = createAppointmentCard(app);
                container.appendChild(card);
            });

        } catch (error) {
            showMessage(error.message, 'error');
        }
    }

    function createAppointmentCard(app) {
        const card = document.createElement('div');
        card.className = 'appointment-card';
        card.dataset.id = app.id; // Store ID for actions

        const date = new Date(app.date + 'T00:00:00');
        const formattedDate = date.toLocaleDateString('pt-BR', { day: '2-digit', month: 'long', year: 'numeric' });
        const status = app.status || 'Pendente';

        card.innerHTML = `
            <div class="card-header">
                <h3>${app.service}</h3>
                <span class="status-badge status-${status}">${status}</span>
            </div>
            <div class="card-body">
                <div class="info-item">
                    <i class="fas fa-user"></i>
                    <span>Cliente: ${app.userName}</span>
                </div>
                <div class="info-item">
                    <i class="fas fa-calendar-alt"></i>
                    <span>Data: ${formattedDate}</span>
                </div>
                <div class="info-item">
                    <i class="fas fa-clock"></i>
                    <span>Hora: ${app.time}</span>
                </div>
                <div class="info-item">
                    <i class="fas fa-cut"></i>
                    <span>Barbeiro: ${app.barberName || 'N/A'}</span>
                </div>
            </div>
            <div class="card-actions">
                <button class="btn-confirm ${status === 'Confirmado' ? 'btn-disabled' : ''}" 
                        onclick="updateAppointmentStatus(${app.id}, 'Confirmado', this)"
                        ${status === 'Confirmado' ? 'disabled' : ''}>
                    Confirmar
                </button>
                <button class="btn-cancel ${status === 'Cancelado' ? 'btn-disabled' : ''}" 
                        onclick="updateAppointmentStatus(${app.id}, 'Cancelado', this)"
                        ${status === 'Cancelado' ? 'disabled' : ''}>
                    Cancelar
                </button>
            </div>
        `;
        return card;
    }

    async function updateAppointmentStatus(id, status, button) {
        button.disabled = true;
        button.textContent = 'Atualizando...';

        try {
            const response = await fetch(`/api/appointments/${id}/status`, {
                method: 'PUT',
                headers: { 'Content-Type': 'application/json' },
                body: JSON.stringify({ status })
            });
            const data = await response.json();
            if (response.ok) {
                showMessage(data.message, 'success');
                loadAppointments(); // Recarrega a lista para atualizar o status
            } else {
                throw new Error(data.error);
            }
        } catch (error) {
            showMessage(error.message || 'Erro ao atualizar status.', 'error');
        }
    }

    loadAppointments();
</script>